#以下的内容很运行工具的关键，需要根据不同的APP定制
CRITICAL_ELEMENT:

#  #微信小程序的名字
#  WECHAT_MINI_PROGRAM_NAME: 学而思营业厅
#  #运行小程序测试 此值为true时用WECHAT_CONFIG的值 打开微信
#  RUN_IN_WECHAT_MINI_PROGRAM_MODE: false

  #Android App测试时，需指定App包名和启动的Activity
  ANDROID_PACKAGE: cn.tuhu.merchant
  ANDROID_MAIN_ACTIVITY: cn.tuhu.merchant.login.StartUpActivity

#  #iOS App测试时需指定以下内容
  IOS_BUNDLE_ID: com.tuhu.cn.tuhushop
#  #手机桌面上显示的APP的名字
  IOS_BUNDLE_NAME: 途虎商户
#  #IPA名字的前缀
  IOS_IPA_NAME: 途虎商户

  #构建XPATH需要的一些内容,UI底部TabBar 多个id时用or拼接 如'@resource-id="id1" or @resource-id="id2"'
#  ANDROID_BOTTOM_TAB_BAR_ID: '@resource-id="cn.tuhu.merchant:id/tv_main_menu"'
  ANDROID_BOTTOM_TAB_BAR_ID: '@class="android.widget.RelativeLayout"]//*[@resource-id="cn.tuhu.merchant:id/tv_main_menu"'
  IOS_BOTTOM_TAB_BAR_TYPE: XCUIElementTypeTabBar

  #通过xpath指定要点击的元素范围 注意值要加引号''
#  ANDROID_CLICK_XPATH_HEADER: '@displayed="true" and string-length(@text)>0 and string-length(@text)<30'
  ANDROID_CLICK_XPATH_HEADER: '@clickable="true"'
  IOS_CLICK_XPATH_HEADER: '@visible="true" and string-length(@value)<30'


#（可选）自动登录时查找控件所需要的信息,当找到列表中第一个元素时会按顺序操作以下元素。注意xpath中的属性值要加双引号""
#如果不需要自动登录功能以下值不需要修改
LOGIN_ELEMENTS:
  #Android 登录相关元素及操作
  LOGIN_ELEMENTS_ANDROID:
  - ANDROID_SELECT_ENV_TUHUTEST:
      XPATH: '//*[@text = "tuhutest免登陆"]'
      ACTION: click
  - ANDOIRD_SELECT_SHOP:
      XPATH: '(//*[@resource-id="cn.tuhu.merchant:id/bt_select_store"])[1]'
      ACTION: click

  #iOS登录相关元素及操作
  LOGIN_ELEMENTS_IOS:
  - IOS_LOGIN_BUTTON:
      XPATH: '//XCUIElementTypeButton[@name="确定"]'
      ACTION: click
  - IOS_LOGIN_BUTTON:
      XPATH: '//XCUIElementTypeButton[@name="一键登录"]'
      ACTION: click
  - IOS_LOGIN_BUTTON:
      XPATH: '(//XCUIElementTypeButton[@name="进入"])[1]'
      ACTION: click
#  - IOS_LOGIN_BUTTON:
#      XPATH: '//XCUIElementTypeStaticText[@name="到店记录"]'
#      ACTION: click
#  - IOS_USERNAME:
#      XPATH: '//*[@type="XCUIElementTypeTextField"]'
#      ACTION: input
#      VALUE: '1361234567'
#  - IOS_PASSWORD:
#      XPATH: '//*[@type="XCUIElementTypeSecureTextField" and @value="请输入登录密码"]'
#      ACTION: input
#      VALUE: '123456'
#  - IOS_LOGIN_BUTTON:
#      XPATH: '//*[@type="XCUIElementTypeButton" and @name="登录" and @label="登录"]'
#      ACTION: click
#  - DRAG:
#      XPATH: '//*[@resource-id="cn.tuhu.merchant:id/xes_login_username"]'
#      ACTION: drag
#      VALUE: '250,1050,800,1050,800,1550'

#
#（可选）以下各值主要用于提高测试的效率，根据app着情修改或者不改
LIST:
  #UI中出现下列文字时 触发back键(iOS 由左向右划触发返回操作)
  PRESS_BACK_TEXT_LIST:
  - 返回
#  - 安全退出

  #当pp跳转到以下app时 触发back键
  PRESS_BACK_PACKAGE_LIST:
  - 高德地图
  - com.autonavi.minimap
  - com.android.settings
  - com.tencent.mm
  - com.android.camera
  - com.android.incallui

  #当前遇到以下Activity时 触发back键 (Android only)
  PRESS_BACK_ACTIVITY_LIST:
  - .mvp.servicecenter.view.ServiceCenterMapDetailActivity
  - activity.SobotChatActivity
  - com.android.internal.app.ResolverActivity
  - .main.h5.ShopAdvertiseH5Activity

  #待输入文本的控制类型
  INPUT_CLASS_LIST:
  - android.widget.EditText
  - android.widget.TextView
  - XCUIElementTypeTextField
  - XCUIElementTypeSecureTextField

  #待输入的文本（随机选中后选列表中的一个）
  INPUT_TEXT_LIST:
  - '123'
#  - 'ABC'

  #除了APP本身的包名外 根据以下包名判断是否跳出了APP,当app跳转到以下app时被认为是合法，会继续遍历操作
  ANDROID_VALID_PACKAGE_LIST:
  - com.miui.securitycenter
  - com.android.server.telecom
  - com.lbe.security.miui
  - gallery
  - packageinstaller
  
  #遇到以下包名，判断app已crash。优先于ANDROID_VALID_PACKAGE_LIST
  ANDROID_INVALID_PACKAGE_LIST:
  - com.miui.home

  #同ANDROID_VALID_PACKAGE_LIST
  IOS_VALID_BUNDLE_LIST:
  - 照片

#  IOS_INVALID_BUNDLE_LIST:
#  - 无

  #白名单，遇到包含以下文本的控件，会多次点击（同一页面，默认所有控件只点一次）
  ITEM_WHITE_LIST:
  - 确定
  - 我知道了
  - 已阅
  - 退出
  - 返回
#  - 取消，这里会导致死循环
  - 允许
  - 已解决

  #不点击包含以下文本的控件
  ITEM_BLACKLIST:
  - 客服
  - 电话
  - 不允许
  - 拒绝
  - 拍照
  - 禁止
  - 呼叫
  - 低电量模式
  - 关闭
  - '//*[@text="去付款"]'
  - 安全退出
  - 切换
  - 找回密码
  - 短信验证码登录
  - 申请加盟
  - 进货
  - 99+
  - 技术支持
  - 车辆有车贴:否
  - 汽配龙订单
  - 全车件查询
  - 询价
  - 确认要货
  - 水印相机
  - vConsole
  - 相册
  - '//*[text()="18321402638"]'
  - '//android.widget.ImageView[@resource-id="cn.tuhu.merchant:id/iv_kefu"]'
  - '//android.widget.ImageView[@resource-id="cn.tuhu.merchant:id/iv_call_number"]'
  - '//XCUIElementTypeButton[@name="fr photo black"]'
  - '//XCUIElementTypeButton[@name="take pic btn"]'
  - '//XCUIElementTypeButton[@name="scan iocn 18"]'

  #不点击以下类型控件及其子元素
  IOS_EXCLUDE_BAR:
  #手机状态栏
  - XCUIElementTypeStatusBar
  #键盘
  - XCUIElementTypeKeyboard

  #不点击以下类型的元素
  IOS_EXCLUDE_TYPE:
  - XCUIElementTypeOther
  - XCUIElementTypeKey
  - XCUIElementTypeWindow
  - XCUIElementTypeApplication

  #不点击以下类型的元素
  ANDROID_EXCLUDE_TYPE:
  - android.widget.FrameLayout

  #解释待续
  NODE_NAME_EXCLUDE_LIST:
  - selected
  - instance
  - checked
  - naf
  - content

  #解释待续
  STRUCTURE_NODE_NAME_EXCLUDE_LIST:
  #iOS
  - name

  #Android
  - text

##(可选)设备udid 对应的设备名称
#d6744554:
#  DEVICE_NAME: XiaoMi4


#*******************以下内容通常不需要修改**************************
#一些全局的配置
GENERAL:
  #截屏数量
  SCREENSHOT_COUNT: 5000

  #Crash时截图显示步骤数量
  CRASH_PIC_COUNT: 10

  #遍历深度
  MAX_DEPTH: 800

  #点击次数
  MAX_CLICK_COUNT: 1000000

  #查找元素的时间
  DEFAULT_WAIT_SEC: 10

  #查找元素的间隔时间
  DEFAULT_POLLING_INTERVAL_SEC: 5

  #是否忽略Crash,设为true时,crash后会重启app然后继续遍历
  IGNORE_CRASH: true

  #遍历的过程中进行向上划动操作  ！！！此项会加长遍历时间！！！
  ENABLE_VERTICAL_SWIPE: false

  #运行时间限制(分钟)
  CRAWLER_RUNNING_TIME: 720

  #控制是否生成视频
  GENERATE_VIDEO: true

  #控制视频方向，竖屏或模屏
  VIDEO_VERTICAL: true

  #每个UI变化X次时，检测是否需要自动登录
  USER_LOGIN_INTERVVAL: 5

  #忽略底部元素Bounds值
  #REMOVE_BOTTOM_BOUND: false


#一些默认值
DEFAULT_VALUE:
  #0.0.0.0代表Server在本地
  APPIUM_SERVER_IP: 127.0.0.1
  #Appium端口
  PORT: 4723
  #IOS WDA_PORT
  IOS_WDA_PORT: 8100


#微信的配置 在运行小程序测试时会用到
WECHAT_CONFIG:
  #Android 配置
  WECHAT_ANDROID_PACKAGE: com.tencent.mm
  WECHAT_ANDROID_MAIN_ACTIVITY: com.tencent.mm.ui.LauncherUI

  #iOS  配置
  WECHAT_IOS_BUNDLE_ID: com.tencent.xin
  WECHAT_IOS_BUNDLE_NAME: 微信
  WECHAT_IOS_IPA_NAME: wechat


#输出更多的log 主要用于调试工具用
LOG:
  #将性能数据写入数据库相关的log
  DB_LOG: false
  #性能数据相关log
  PERF_LOG: false
  #是否开启DOM树在log中的显示
  DOM_DISPLAY: false


#时序数据库 用于记录性能数据 与-e 一起使用
INFLUXDB:
  DB_PORT: 8086
  DB_IP: localhost


